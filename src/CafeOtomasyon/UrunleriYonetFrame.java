/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CafeOtomasyon;

import JavaKodları.Urun;
import JavaKodları.Veritabani;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author T470
 */
public class UrunleriYonetFrame extends javax.swing.JFrame {

    /**
     * Creates new form UrunleriYonetFrame
     */
    int yatay, dikey;
    Veritabani veritabani = new Veritabani();
    DefaultTableModel model; //  tablo verilerini saklamak ve yönetmek için 
    Color renk = new Color(248, 152, 49);
    Color grid = new Color(153, 77, 28);

    int rowIndex;

    public UrunleriYonetFrame() {
        initComponents();
        urunTablosu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Cikis = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ÜrünAdıtext = new javax.swing.JTextField();
        UrunAditext = new javax.swing.JTextField();
        Fiyat = new javax.swing.JTextField();
        FiyatText = new javax.swing.JTextField();
        UrunuSil = new javax.swing.JButton();
        Guncelle = new javax.swing.JButton();
        ArkaPlan = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Cikis.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        Cikis.setForeground(new java.awt.Color(255, 255, 255));
        Cikis.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Cikis.setText("X");
        Cikis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CikisMouseClicked(evt);
            }
        });
        jPanel1.add(Cikis, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 35, 34));

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ürün Kodu", "Ürün Adı", "Fiyat", "Resim"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 830, 320));

        ÜrünAdıtext.setEditable(false);
        ÜrünAdıtext.setBackground(new java.awt.Color(248, 152, 49));
        ÜrünAdıtext.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ÜrünAdıtext.setForeground(new java.awt.Color(0, 0, 0));
        ÜrünAdıtext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ÜrünAdıtext.setText("Ürün Adı");
        jPanel1.add(ÜrünAdıtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 130, 40));

        UrunAditext.setBackground(new java.awt.Color(255, 255, 255));
        UrunAditext.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        UrunAditext.setForeground(new java.awt.Color(0, 0, 0));
        UrunAditext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        UrunAditext.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(107, 74, 51), new java.awt.Color(248, 152, 49)));
        jPanel1.add(UrunAditext, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 214, 40));

        Fiyat.setEditable(false);
        Fiyat.setBackground(new java.awt.Color(248, 152, 49));
        Fiyat.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Fiyat.setForeground(new java.awt.Color(0, 0, 0));
        Fiyat.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Fiyat.setText("Fiyat");
        jPanel1.add(Fiyat, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 130, 40));

        FiyatText.setBackground(new java.awt.Color(255, 255, 255));
        FiyatText.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        FiyatText.setForeground(new java.awt.Color(0, 0, 0));
        FiyatText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FiyatText.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(107, 74, 51), new java.awt.Color(248, 152, 49)));
        jPanel1.add(FiyatText, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 214, 40));

        UrunuSil.setBackground(new java.awt.Color(153, 77, 28));
        UrunuSil.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        UrunuSil.setForeground(new java.awt.Color(0, 0, 0));
        UrunuSil.setText("Ürünü Sil");
        UrunuSil.setBorder(null);
        UrunuSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UrunuSilActionPerformed(evt);
            }
        });
        jPanel1.add(UrunuSil, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, 214, 34));

        Guncelle.setBackground(new java.awt.Color(153, 77, 28));
        Guncelle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Guncelle.setForeground(new java.awt.Color(0, 0, 0));
        Guncelle.setText("Güncelle");
        Guncelle.setBorder(null);
        Guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuncelleActionPerformed(evt);
            }
        });
        jPanel1.add(Guncelle, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 214, 34));

        ArkaPlan.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ArkaPlan.setForeground(new java.awt.Color(0, 0, 0));
        ArkaPlan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resimler/Uyonet.png"))); // NOI18N
        jPanel1.add(ArkaPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 630));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CikisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CikisMouseClicked
        setVisible(false);
    }//GEN-LAST:event_CikisMouseClicked

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        yatay = evt.getX();
        dikey = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int x = evt.getXOnScreen(); // ekrandaki yeri 
        int y = evt.getYOnScreen();
        this.setLocation(x - yatay, y - dikey); // yeni konum için
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        model = (DefaultTableModel) jTable1.getModel(); // tablo modeli
        rowIndex = jTable1.getSelectedRow(); // Seçilen satırın indeksi
        UrunAditext.setText(model.getValueAt(rowIndex, 1).toString());//Seçilen satırdaki ürün adını al
        FiyatText.setText(model.getValueAt(rowIndex, 2).toString()); //Seçilen satırdaki fiyatı al

    }//GEN-LAST:event_jTable1MouseClicked

    private void GuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuncelleActionPerformed
        if (UrunAditext.getText().isEmpty() && FiyatText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Lütfen bir ürün seçiniz!", "Uyarı", 2);
        } else {
            try {
                Urun urun = new Urun();
                urun.setId(Integer.parseInt(model.getValueAt(rowIndex, 0).toString()));
                urun.setAd(UrunAditext.getText().trim());
                urun.setFiyat(Double.parseDouble(FiyatText.getText().trim()));
                if (veritabani.guncelle(urun)) {
                    JOptionPane.showMessageDialog(this, "Ürün güncellendi", "Mesaj", 1);
                    jTable1.setModel(new DefaultTableModel(null, new Object[]{"ID", "Ad", "Fiyat", "Resim"}));
                    veritabani.getTumUrunler(jTable1);
                    jTable1.getTableHeader().setReorderingAllowed(false);//sütunların yeniden sıralanmasının devre dışı bırakmak için
                    jTable1.getColumnModel().getColumn(3).setCellRenderer(new UrunleriYonetFrame.ImageRenderer());//resmin görünümü için
                    temizle();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "" + e, "Uyarı", 2); // uyarı yazısı yaz
            }

        }
    }//GEN-LAST:event_GuncelleActionPerformed

    private void UrunuSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UrunuSilActionPerformed
        if (UrunAditext.getText().isEmpty() && FiyatText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Lütfen bir ürün seçiniz!", "Uyarı", 2);
        } else {
            try {
                Urun urun = new Urun();
                urun.setId(Integer.parseInt(model.getValueAt(rowIndex, 0).toString()));
                urun.setAd(UrunAditext.getText().trim());
                urun.setFiyat(Double.parseDouble(FiyatText.getText().trim()));
                if (veritabani.sil(urun)) {
                    JOptionPane.showMessageDialog(this, "Ürün silindi.", "Mesaj", 1);
                    jTable1.setModel(new DefaultTableModel(null, new Object[]{"ID", "Ad", "Fiyat", "Resim"}));
                    veritabani.getTumUrunler(jTable1);
                    jTable1.getTableHeader().setReorderingAllowed(false);//sütunların yeniden sıralanmasının devre dışı bırakmak için
                    jTable1.getColumnModel().getColumn(3).setCellRenderer(new UrunleriYonetFrame.ImageRenderer());//resmin görünümü için
                    temizle();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "" + e, "Uyarı", 2); // uyarı yazısı yaz
            }

        }
    }//GEN-LAST:event_UrunuSilActionPerformed

    private void temizle() {
        UrunAditext.setText(null);
        FiyatText.setText(null);
    }

    private void urunTablosu() {
        veritabani.getTumUrunler(jTable1);
        model = (DefaultTableModel) jTable1.getModel();
        jTable1.setRowHeight(80);
        jTable1.setShowGrid(true);
        jTable1.setGridColor(Color.black);
        jTable1.setBackground(grid);
        jTable1.setSelectionBackground(renk);
        jTable1.setModel(model);
        jTable1.getTableHeader().setReorderingAllowed(false);//sütunların yeniden sıralanmasının devre dışı bırakmak için
        jTable1.getColumnModel().getColumn(3).setCellRenderer(new UrunleriYonetFrame.ImageRenderer());
    }

    private class ImageRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable tablo, Object value, boolean isSelected, boolean hasFocus, int row, int column) {//farklı türlerde verileri göstermek için
            JLabel label = new JLabel();
            byte[] bytes = (byte[]) value;
            ImageIcon resimicon = new ImageIcon(new ImageIcon(bytes).getImage().getScaledInstance(200, 130, Image.SCALE_REPLICATE)); // byte içindeki resmi ImageIcon a dönüştürmek için
            label.setIcon(resimicon); // resim eklemek için
            return label;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ArkaPlan;
    private javax.swing.JLabel Cikis;
    private javax.swing.JTextField Fiyat;
    private javax.swing.JTextField FiyatText;
    private javax.swing.JButton Guncelle;
    private javax.swing.JTextField UrunAditext;
    private javax.swing.JButton UrunuSil;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField ÜrünAdıtext;
    // End of variables declaration//GEN-END:variables
}
